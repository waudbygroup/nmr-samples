name: Build and Deploy NMR Sample Manager

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup directories
        run: |
          mkdir -p docs/download docs/css docs/js docs/schemas
          
      - name: Build Online Version
        run: |
          # Copy all source files
          cp -r src/* docs/
          
          # Replace {{SCHEMA}} with external schema loading using Python
          python3 << 'EOF'
          with open('docs/index.html', 'r') as f:
              content = f.read()
          
          schema_loader = '''(async function() {
              try {
                  const response = await fetch("schemas/current.json");
                  const schema = await response.json();
                  window.EMBEDDED_SCHEMA = schema;
                  window.SCHEMA_LOADED = true;
                  // Dispatch event to notify that schema is ready
                  window.dispatchEvent(new CustomEvent('schemaReady'));
              } catch (error) {
                  console.error("Failed to load schema:", error);
                  window.SCHEMA_LOADED = false;
                  window.dispatchEvent(new CustomEvent('schemaError', { detail: error }));
              }
          })();'''
          
          content = content.replace('{{SCHEMA}}', schema_loader)
          
          with open('docs/index.html', 'w') as f:
              f.write(content)
          EOF
          
      - name: Build Offline Version  
        run: |
          # Copy all source files to download directory
          cp -r src/* docs/download/
          
          # Replace {{SCHEMA}} with embedded schema using Python
          python3 << 'EOF'
          import json
          
          # Read schema
          with open('src/schemas/current.json', 'r') as f:
              schema = json.load(f)
          
          # Read HTML file
          with open('docs/download/index.html', 'r') as f:
              content = f.read()
          
          # Create embedded schema code  
          schema_code = f'window.EMBEDDED_SCHEMA = {json.dumps(schema)}; window.SCHEMA_LOADED = true; window.dispatchEvent(new CustomEvent("schemaReady"));'
          
          # Replace placeholder
          content = content.replace('{{SCHEMA}}', schema_code)
          
          # Write back
          with open('docs/download/index.html', 'w') as f:
              f.write(content)
          EOF
          
      - name: Create Offline Package
        run: |
          cd docs/download
          zip -r nmr-samples.zip * -x "*.zip"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4